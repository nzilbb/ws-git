---
title: "Foundations"
subtitle: "Session 4: Git, GitHub, and GitLab"
# For author options see : 
# https://quarto.org/docs/authoring/front-matter.html#authors-and-affiliations
# NB: multiple authors can be added here.
author:
  - name:
      given: Joshua
      family: Wilson Black
    email: joshua.black@canterbury.ac.nz
    orcid: 0000-0002-8272-5763
    affiliation: 
      - "Te Kāhui Roro Reo | New Zealand Institute of Language, Brain and Behaviour"
      - "Te Whare Wānanga o Waitaha | University of Canterbury"
format:
  revealjs:
    theme: [custom.scss]
    incremental: true
    logo: images/NZILBB-small.svg
    template-partials:
      - title-slide.html
    title-slide-attributes:
      # If you have Marsden funding, change image name to `nzilbb-uc-marsden.svg`
      data-background-image: images/nzilbb-uc.svg
      # First number controls the horizontal position, second controls vertical.
      data-background-position: '50% 5%'
      # Controls size of image relative to width of the slide.
      data-background-size: 70%
    embed-resources: false
    include-in-header:
      - text: |
          <link rel="icon" type="image/png" sizes="32x32" href=".//images/fav.png" />
bibliography: 
  - grateful-refs.bib
  - stat_workshops.bib
editor: 
  markdown: 
    wrap: 72
execute: 
  echo: true
knitr:
  opts_chunk: 
    dev: "png"
    dev.args: 
      bg: "transparent"
---

```{r}
#| echo: false
library(tidyverse)
library(here)

theme_set(theme_bw())
```

# Overview

## Overview

1. Git and version control
2. GitHub and UC's GitLab
3. Recipes and advice
4. When things go wrong

::: fragment
Slides:
[nzilbb.github.io/ws-git/slides](https://nzilbb.github.io/ws-data-vis/slides)
:::

# Git and version control

## Version control

- Software comes in *versions*
- Developers need to know how versions relate to each other
- Version control systems are the solution
- We have similar problems...

## {background-image="http://www.phdcomics.com/comics/archive/phd101212s.gif" background-size="contain"}

## Why use version control? {.smaller}

- "Your paper relies on whatsit scores for every dongle, but I think you must have
made an error. How did you calculate them?"
    - "...uh, they must be on this old hard drive somewhere... wait... perhaps my
    RA did it?..."
- "We've switched to _sparkly-shiny-new) models this week, but they seem similar to 
the _old-reliable-friendly_ models we fit a few months ago. How do the results of 
the two approaches differ?"
    - "...uh, we replaced them..."
- "Why is your Markdown file longer than _War and Peace_?
    - "...I want to keep all the previous approaches here so I can get access to
    them quickly"
- **[Let's be professional!](https://youtu.be/8qzVV7eEiaI?si=aBV7MhDKTGp_cjK8)**

## Git

- [Git](https://en.wikipedia.org/wiki/Git) is a widely used version control system.
- It allows you to track versions and see differences between them
    - ...along with dividing projects into into 'branches', merging distinct
    branches together, etc etc.
- It is *distributed* in the sense that the same project can be on multiple 
computers.
- More controlled than, e.g., just putting your project on dropbox.
    - BTW: you should at least do that.
    
## Git (cont.)

- If used well, say goodbye to `_Final_JWBcomments_v2_postR&R_reallyfinal.docx`
- But there's a learning curve...

## {background-iframe="https://www.youtube.com/embed/BHPb94X0NJE?si=XvxcFPHe0CHZAn44&amp;start=64" background-color="black"}

## Git vocab

::: fragment
It's best to learn by doing, but...

:::

- **Repo/Repository:** Directory managed by Git.
- **Commit:** A snapshot of the repository.
- **Diff:** The difference between two commits.
- **Remote:** A version of the repository hosted online.
- **Pull:** To get any changes from a remote repository and merge them with
your copy of the repository.
- **Push:** To upload your commits to a remote repository.

---

::: r-stack

:::: {.fragment .fade-in-then-out}
![Write a commit message and press 'commit'](images/commit.png)
::::

:::: {.fragment .fade-in-then-out}
![A history of commits](images/history.png)
::::

:::: {.fragment .fade-in-then-out}
![Differences between commits.](images/diff.png)
::::

:::

# References

```{r}
#| echo: false
grateful::nocite_references(
  grateful::cite_packages(output = "citekeys", out.dir = here('slides'))
)
```

::: refs
:::
